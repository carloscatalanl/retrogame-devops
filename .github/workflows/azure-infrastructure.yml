name: Deploy Infrastructure in Azure

# on: workflow_dispatch
on:
   push:
    branches:
      - "test"

jobs:

  Terraform:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform/infrastructure
    env:
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Format
        run: terraform fmt
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -lock=false
        
      - name: Terraform Apply
        run: terraform apply --auto-approve -lock=false
    

      - name: Proof
        run: terraform output -json >> terraform-output.json

      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: login_server.value
        with:
          cmd: 'jq .login_server.value package.json -r'
      
      - name: Show my version
        run: 'echo "login_server.value ${{ steps.login_server.value.outputs.value }}"'
      
      # - name: Proof3
      #   run: jq .login_server.value -r terraform-output
      
        # terraform output -json | jq -r '@sh "export ACR_USER=\(.admin_username.value)\nexport ACR_PASSWORD=\(.admin_pass.value)\nexport ACR_LOGIN=\(.login_server.value)"'
      


  # Release:
    
  #   needs: Terraform
    
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Build the Docker image
  #     run: docker build -t pacman-app .

  #   - name: Azure Container Registry Login
  #     uses: Azure/docker-login@v1
  #     with:
  #       # Container registry username
  #       username: ${{ secrets.ACR_USER }}
  #       # Container registry password
  #       password: ${{ secrets.ACR_PASSWORD }}
  #       # Container registry server url
  #       login-server: ${{ secrets.ACR_SERVER }}
      
  #   - name: Tag Docker image
  #     run: docker tag pacman-app ${{ secrets.ACR_SERVER }}/pacman-app
    
  #   - name: Push Docker image into ACR
  #     run: docker push ${{ secrets.ACR_SERVER }}/pacman-app      

  # Helm:
  #   runs-on: ubuntu-latest
  #   needs: Release

  #   defaults:
  #     run:
  #       working-directory: ./helm

  #   steps:

  #     - uses: actions/checkout@v2

  #     - name: Install Helm
  #       uses: Azure/setup-helm@v1

  #       with:
  #         version: v3.7.1

  #     - name: Get AKS Credentials
  #       uses: Azure/aks-set-context@v1
  #       with:
  #         creds: ${{ secrets.AZ_CREDS }}
  #         # Resource Group Name
  #         resource-group: rg-retro_pacman
  #         # AKS Cluster Name
  #         cluster-name: kc_retro_pacman
  #     - name: Run Helm Deploy
  #       run: |
  #         helm upgrade \
  #           --install \
  #           --create-namespace \
  #           --atomic \
  #           --wait \
  #           --namespace pacman \
  #           retropacmanapp \
  #           . \
  #           --set username=$MONGO_AUTH_USER \
  #           --set password=$MONGO_AUTH_PWD
  #       env:
  #         MONGO_AUTH_USER: ${{ secrets.MONGO_USER }}
  #         MONGO_AUTH_PWD: ${{ secrets.MONGO_PWD }}



